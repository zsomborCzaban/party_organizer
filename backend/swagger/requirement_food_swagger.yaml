openapi: 3.0.3
info:
  title: Party Organizer
  description: This is the server's swagger file for the Party Organizer project
  version: 1.2.1
servers:
  - url: http://localhost:8080/api/v1/
paths:
  /foodRequirement:
    post:
      tags:
        - Food Requirement
      summary: Create a food requirement
      description: Create a food requirement
      requestBody:
        description: Food requirement object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/food_requirement_body_idless"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_success_food_requirement_data"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "406":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
  /food_requirement/{id}:
    get:
      tags:
        - Food Requirement
      summary: Get a food requirement
      description: Get a food requirement
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_success_food_requirement_data"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
    put:
      tags:
        - Food Requirement
      summary: Update a food requirement
      description: Update a food requirement
      requestBody:
        description: Food requirement object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/food_requirement_body_idless"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_success_food_requirement_data"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "406":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
    delete:
      tags:
        - Food Requirement
      summary: Delete a food requirement
      description: Delete a food requirement
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_success_message"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"

  /food_requirement/getByPartyId/{party_id}:
    get:
      tags:
        - Food Requirement
      summary: Get all food requirements for a party
      description: Get all food requirements for a party
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_success_food_requirement_data_array"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response_error"
components:
  schemas:
    food_requirement_body:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: integer
              example: 6
        - $ref: '#/components/schemas/food_requirement_body_idless'
    food_requirement_body_idless:
      type: object
      properties:
        party_id:
          type: integer
          format: integer
          example: 2
        type:
          type: string
          format: string
          example: "whisky"
        target_quantity:
          type: integer
          format: integer
          example: 2,6
        quantity_mark:
          type: string
          format: string
          example: "L"
    response_success_food_requirement_data:
      type: object
      properties:
        is_error:
          type: boolean
          format: boolean
          example: false
        code:
          type: integer
          format: integer
          example: 200
        data:
          $ref: '#/components/schemas/food_requirement_body'
    response_success_food_requirement_data_array:
      type: object
      properties:
        is_error:
          type: boolean
          format: boolean
          example: false
        code:
          type: integer
          format: integer
          example: 200
        data:
          type: array
          items:
            $ref: '#/components/schemas/food_requirement_body'
    response_success_message:
      type: object
      properties:
        is_error:
          type: boolean
          format: boolean
          example: false
        code:
          type: integer
          format: integer
          example: 200
        data:
          type: string
          format: string
          example: "action_successful"
    response_error:
      type: object
      properties:
        is_error:
          type: boolean
          format: boolean
          example: false
        code:
          type: integer
          format: integer
          example: 200
        errors:
          type: string
          format: string
          example: "any error"